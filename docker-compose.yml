version: '3'

services:
  # API
  api:
    env_file:
      - .env
    build:
      context: ./backend
      args:
        - DATABASE_URL=postgres://${DB_USERNAME}:${DB_PASSWORD}@database:${DB_PASSWORD}/${DB_DATABASE}
    container_name: dmnlg_backend
    restart: unless-stopped
    depends_on:
      - 'database'
    networks:
      - transcendenza

  # FRONTEND
  frontend:
    image: node:16-alpine
    container_name: dmnlg_frontend
    build:
      context: ./frontend
    ports:
      - 8080:8080
    restart: unless-stopped
    volumes:
      - './frontend/:/data'
    networks:
      - transcendenza

  # # DATABASE
  database:
    container_name: dmnlg_postrgres
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD}'
      POSTGRES_DB: '${DB_DATABASE}'
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - transcendenza

# NETWORKS
networks:
  transcendenza:
    driver: bridge

# VOLUMES
volumes:
  postgres-data:
    driver: local
